/**
 * MetaFab API
 * Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * OpenAPI spec version: 1.5.1
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"
#include "OpenAPIBaseModel.h"

namespace OpenAPI
{

class OPENAPI_API OpenAPIEcosystemsApi
{
public:
	OpenAPIEcosystemsApi();
	~OpenAPIEcosystemsApi();

	/* Sets the URL Endpoint.
	* Note: several fallback endpoints can be configured in request retry policies, see Request::SetShouldRetry */
	void SetURL(const FString& Url);

	/* Adds global header params to all requests */
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	/* Sets the retry manager to the user-defined retry manager. User must manage the lifetime of the retry manager.
	* If no retry manager is specified and a request needs retries, a default retry manager will be used.
	* See also: Request::SetShouldRetry */
	void SetHttpRetryManager(FHttpRetrySystem::FManager& RetryManager);
	FHttpRetrySystem::FManager& GetHttpRetryManager();

	class ApproveEcosystemGameRequest;
	class ApproveEcosystemGameResponse;
	class AuthEcosystemRequest;
	class AuthEcosystemResponse;
	class AuthProfileRequest;
	class AuthProfileResponse;
	class AuthProfilePlayerRequest;
	class AuthProfilePlayerResponse;
	class CreateEcosystemRequest;
	class CreateEcosystemResponse;
	class CreateProfileRequest;
	class CreateProfileResponse;
	class CreateProfilePlayerRequest;
	class CreateProfilePlayerResponse;
	class GetEcosystemRequest;
	class GetEcosystemResponse;
	class GetEcosystemGameRequest;
	class GetEcosystemGameResponse;
	class GetEcosystemGamesRequest;
	class GetEcosystemGamesResponse;
	class GetProfileGameRequest;
	class GetProfileGameResponse;
	class GetProfileGamesRequest;
	class GetProfileGamesResponse;
	class UnapproveEcosystemGameRequest;
	class UnapproveEcosystemGameResponse;
	class UpdateEcosystemRequest;
	class UpdateEcosystemResponse;
	class UpdateProfileRequest;
	class UpdateProfileResponse;
	class UpdateProfilePlayerRequest;
	class UpdateProfilePlayerResponse;
	
    DECLARE_DELEGATE_OneParam(FApproveEcosystemGameDelegate, const ApproveEcosystemGameResponse&);
    DECLARE_DELEGATE_OneParam(FAuthEcosystemDelegate, const AuthEcosystemResponse&);
    DECLARE_DELEGATE_OneParam(FAuthProfileDelegate, const AuthProfileResponse&);
    DECLARE_DELEGATE_OneParam(FAuthProfilePlayerDelegate, const AuthProfilePlayerResponse&);
    DECLARE_DELEGATE_OneParam(FCreateEcosystemDelegate, const CreateEcosystemResponse&);
    DECLARE_DELEGATE_OneParam(FCreateProfileDelegate, const CreateProfileResponse&);
    DECLARE_DELEGATE_OneParam(FCreateProfilePlayerDelegate, const CreateProfilePlayerResponse&);
    DECLARE_DELEGATE_OneParam(FGetEcosystemDelegate, const GetEcosystemResponse&);
    DECLARE_DELEGATE_OneParam(FGetEcosystemGameDelegate, const GetEcosystemGameResponse&);
    DECLARE_DELEGATE_OneParam(FGetEcosystemGamesDelegate, const GetEcosystemGamesResponse&);
    DECLARE_DELEGATE_OneParam(FGetProfileGameDelegate, const GetProfileGameResponse&);
    DECLARE_DELEGATE_OneParam(FGetProfileGamesDelegate, const GetProfileGamesResponse&);
    DECLARE_DELEGATE_OneParam(FUnapproveEcosystemGameDelegate, const UnapproveEcosystemGameResponse&);
    DECLARE_DELEGATE_OneParam(FUpdateEcosystemDelegate, const UpdateEcosystemResponse&);
    DECLARE_DELEGATE_OneParam(FUpdateProfileDelegate, const UpdateProfileResponse&);
    DECLARE_DELEGATE_OneParam(FUpdateProfilePlayerDelegate, const UpdateProfilePlayerResponse&);
    
    FHttpRequestPtr ApproveEcosystemGame(const ApproveEcosystemGameRequest& Request, const FApproveEcosystemGameDelegate& Delegate = FApproveEcosystemGameDelegate()) const;
    FHttpRequestPtr AuthEcosystem(const AuthEcosystemRequest& Request, const FAuthEcosystemDelegate& Delegate = FAuthEcosystemDelegate()) const;
    FHttpRequestPtr AuthProfile(const AuthProfileRequest& Request, const FAuthProfileDelegate& Delegate = FAuthProfileDelegate()) const;
    FHttpRequestPtr AuthProfilePlayer(const AuthProfilePlayerRequest& Request, const FAuthProfilePlayerDelegate& Delegate = FAuthProfilePlayerDelegate()) const;
    FHttpRequestPtr CreateEcosystem(const CreateEcosystemRequest& Request, const FCreateEcosystemDelegate& Delegate = FCreateEcosystemDelegate()) const;
    FHttpRequestPtr CreateProfile(const CreateProfileRequest& Request, const FCreateProfileDelegate& Delegate = FCreateProfileDelegate()) const;
    FHttpRequestPtr CreateProfilePlayer(const CreateProfilePlayerRequest& Request, const FCreateProfilePlayerDelegate& Delegate = FCreateProfilePlayerDelegate()) const;
    FHttpRequestPtr GetEcosystem(const GetEcosystemRequest& Request, const FGetEcosystemDelegate& Delegate = FGetEcosystemDelegate()) const;
    FHttpRequestPtr GetEcosystemGame(const GetEcosystemGameRequest& Request, const FGetEcosystemGameDelegate& Delegate = FGetEcosystemGameDelegate()) const;
    FHttpRequestPtr GetEcosystemGames(const GetEcosystemGamesRequest& Request, const FGetEcosystemGamesDelegate& Delegate = FGetEcosystemGamesDelegate()) const;
    FHttpRequestPtr GetProfileGame(const GetProfileGameRequest& Request, const FGetProfileGameDelegate& Delegate = FGetProfileGameDelegate()) const;
    FHttpRequestPtr GetProfileGames(const GetProfileGamesRequest& Request, const FGetProfileGamesDelegate& Delegate = FGetProfileGamesDelegate()) const;
    FHttpRequestPtr UnapproveEcosystemGame(const UnapproveEcosystemGameRequest& Request, const FUnapproveEcosystemGameDelegate& Delegate = FUnapproveEcosystemGameDelegate()) const;
    FHttpRequestPtr UpdateEcosystem(const UpdateEcosystemRequest& Request, const FUpdateEcosystemDelegate& Delegate = FUpdateEcosystemDelegate()) const;
    FHttpRequestPtr UpdateProfile(const UpdateProfileRequest& Request, const FUpdateProfileDelegate& Delegate = FUpdateProfileDelegate()) const;
    FHttpRequestPtr UpdateProfilePlayer(const UpdateProfilePlayerRequest& Request, const FUpdateProfilePlayerDelegate& Delegate = FUpdateProfilePlayerDelegate()) const;
    
private:
    void OnApproveEcosystemGameResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FApproveEcosystemGameDelegate Delegate) const;
    void OnAuthEcosystemResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FAuthEcosystemDelegate Delegate) const;
    void OnAuthProfileResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FAuthProfileDelegate Delegate) const;
    void OnAuthProfilePlayerResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FAuthProfilePlayerDelegate Delegate) const;
    void OnCreateEcosystemResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCreateEcosystemDelegate Delegate) const;
    void OnCreateProfileResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCreateProfileDelegate Delegate) const;
    void OnCreateProfilePlayerResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCreateProfilePlayerDelegate Delegate) const;
    void OnGetEcosystemResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetEcosystemDelegate Delegate) const;
    void OnGetEcosystemGameResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetEcosystemGameDelegate Delegate) const;
    void OnGetEcosystemGamesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetEcosystemGamesDelegate Delegate) const;
    void OnGetProfileGameResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetProfileGameDelegate Delegate) const;
    void OnGetProfileGamesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FGetProfileGamesDelegate Delegate) const;
    void OnUnapproveEcosystemGameResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FUnapproveEcosystemGameDelegate Delegate) const;
    void OnUpdateEcosystemResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FUpdateEcosystemDelegate Delegate) const;
    void OnUpdateProfileResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FUpdateProfileDelegate Delegate) const;
    void OnUpdateProfilePlayerResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FUpdateProfilePlayerDelegate Delegate) const;
    
	FHttpRequestRef CreateHttpRequest(const Request& Request) const;
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
	mutable FHttpRetrySystem::FManager* RetryManager = nullptr;
	mutable TUniquePtr<HttpRetryManager> DefaultRetryManager;
};

}
