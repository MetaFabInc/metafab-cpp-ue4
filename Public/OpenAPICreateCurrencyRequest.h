/**
 * MetaFab API
 *  Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * OpenAPI spec version: 1.3.0
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"

namespace MetaFab
{

/*
 * OpenAPICreateCurrencyRequest
 *
 * 
 */
class METAFAB_API OpenAPICreateCurrencyRequest : public Model
{
public:
    virtual ~OpenAPICreateCurrencyRequest() {}
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
	void WriteJson(JsonWriter& Writer) const final;

	/* The name of this currency. This can be anything, such as `Bright Gems`, `Gold`, etc. */
	FString Name;
	/* The shorthand symbol to represent this currency. This can be anything, such as `BGEM`, `GLD`, etc. */
	FString Symbol;
	/* The maximum amount of this currency that can ever exist. Use `0` if you do not want this currency to have a maximum supply. */
	double SupplyCap;
	enum class ChainEnum
	{
		Ethereum,
		Goerli,
		Matic,
		Maticmumbai,
		Arbitrum,
		Arbitrumgoerli,
  	};

	static FString EnumToString(const ChainEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, ChainEnum& EnumValue);
	/* The blockchain you want to deploy this currency on. Support for new blockchains are added over time. */
	ChainEnum Chain;
};

}
